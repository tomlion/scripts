#!/bin/bash
#
# See: https://github.com/simpx/scripts/blob/master/stackscript
# Install: Ruby 1.9.3, Nodejs, Redis, Mongodb and Nginx with Passenger
# Reference: https://www.linode.com/stackscripts/view/?StackScriptID=1291
#
# <UDF name="rr_env" Label="Rails/Rack environment to run" default="production" />
# <UDF name="deploy_user" Label="Username of deploy user" default="deploy" />

exec &> /root/stackscript.log

#EXPORTS
    export NODEJS_VERSION="v0.8.8"
    export REDIS_VERSION="redis-2.4.16"
    export RUBY_VERSION="ruby-1.9.3-p194"
    export GIT_USER='git'
    export GIT_REPO_DIR='tomlion'
    export DEPLOY_USER='deploy'

# Update packages and install essentials
    cd /tmp
    echo "Start to install! Good Luck!"

    #system_update
    apt-get update
    apt-get -y install aptitude
    aptitude -y full-upgrade

    apt-get -y install build-essential bison openssl libreadline6 libreadline6-dev libcurl4-openssl-dev git-core zlib1g zlib1g-dev  libssl-dev libyaml-dev libsqlite3-0 libsqlite3-dev sqlite3 libxml2-dev libxslt-dev autoconf libc6-dev curl 

    #good stuff
    aptitude -y install wget vim less
    sed -i -e 's/^#PS1=/PS1=/' /root/.bashrc # enable the colorful root bash prompt
    sed -i -e "s/^#alias ll='ls -l'/alias ll='ls -al'/" /root/.bashrc # enable ll list long alias <3

    echo "Essentials installed"

# Install nodejs for javascript runtime
    echo "Installing Nodejs $NODEJS_VERSION"
    echo "Downloading: (from calling wget http://nodejs.org/dist/$NODEJS_VERSION/node-$NODEJS_VERSION.tar.gz)"
    wget http://nodejs.org/dist/$NODEJS_VERSION/node-$NODEJS_VERSION.tar.gz
    echo "Extracting the file"
    tar xzf node-$NODEJS_VERSION.tar.gz
    cd node-$NODEJS_VERSION
    echo "current directory: `pwd`"
    echo "Nodejs Configuration output: (from calling ./configure)"
    ./configure
    echo "Nodejs make output: (form calling make)"
    make
    echo "Nodejs make install output: (from calling make install)"
    make install
    cd ..
    echo "Nodejs installed"

# Install Redis
    echo "Installing Redis $REDIS_VERSION"
    echo "Downloading: (from calling wget http://redis.googlecode.com/files/$REDIS_VERSION.tar.gz)"
    wget http://redis.googlecode.com/files/$REDIS_VERSION.tar.gz
    tar xzf $REDIS_VERSION.tar.gz
    cd $REDIS_VERSION
    ./configure
    make
    make install
    # Download Configuration for redis
    echo "Downloading Configuration files"
    wget https://raw.github.com/tomlion/scripts/master/redis.conf
    wget https://raw.github.com/tomlion/scripts/master/redis-server
    mv redis-server /etc/init.d/redis-server
    chmod +x /etc/init.d/redis-server
    mv redis.conf /etc/redis.conf
    # Add redis user
    echo "Add Redis user"
    mkdir -p /var/lib/redis
    mkdir -p /var/log/redis
    useradd --system --home-dir /var/lib/redis redis
    chown redis.redis /var/lib/redis
    chown redis.redis /var/log/redis
    # Start redis-server during boot and stop during shutdown
    update-rc.d redis-server defaults
    cd ..

# Installing Ruby
    echo "Installing Ruby $RUBY_VERSION"
    echo "Downloading: (from calling wget http://ftp.ruby-lang.org/pub/ruby/1.9/$RUBY_VERSION.tar.gz)"
    wget http://ftp.ruby-lang.org/pub/ruby/1.9/$RUBY_VERSION.tar.gz
    echo "tar output:"
    tar xzf $RUBY_VERSION.tar.gz
    cd $RUBY_VERSION
    echo "current directory: `pwd`"
    echo "Ruby Configuration output: (from calling ./configure)"
    ./configure
    echo "Ruby make output: (from calling make)"
    make
    echo "Ruby make install output: (from calling make install)"
    make install
    cd ..
    echo "Ruby installed!"

# Set up Nginx and Passenger
    echo "Installing Nginx and Passenger"
    gem install passenger --no-ri --no-rdoc
    passenger-install-nginx-module --auto --auto-download --prefix="/usr/local/nginx"
    #set up nginx
    ln -s /usr/local/nginx/sbin/nginx /usr/local/sbin
    wget https://raw.github.com/tomlion/scripts/master/nginx
    mv nginx /etc/init.d/nginx
    chmod +x /etc/init.d/nginx
    # Start nginx during boot and stop during shutdown
    update-rc.d -f nginx defaults

# Install git
    echo "Installing Git"
    apt-get -y install git-core

    echo "Add git user: $GIT_USER"
    echo "$GIT_USER:$GIT_USER:1001:1001::/home/$GIT_USER:/usr/bin/git-shell" | newusers
    cp /usr/share/doc/git/contrib/git-shell-commands /home/$GIT_USER/ -R
    mkdir /home/$GIT_USER/$GIT_RERP_DIR
    chown -R $GIT_USER /home/$GIT_USER
    chmod +x /home/$GIT_USER/git-shell-commands/help
    chmod +x /home/$GIT_USER/git-shell-commands/list

# Set up rails environment
    if [ ! -n "$RR_ENV" ]; then
        RR_ENV="production"
    fi
    cat >> /etc/environment << EOF
RAILS_ENV="$RR_ENV"
RACK_ENV="$RR_ENV"
EOF

# Installing Rails 3
    gem update --system
    # Install rails
    echo "Installing Rails3 and gems"
    gem install rails --no-ri --no-rdoc
    #Install sqlite
    apt-get -y install sqlite3 libsqlite3-dev
    gem install sqlite3 --no-ri --no-rdoc
    #Install mongo gem
    gem install mongoid bson_ext --no-ri --no-rdoc

# Install mongodb
    echo "Installing Mongodb"
    apt-key adv --keyserver keyserver.ubuntu.com --recv 7F0CEB10
    echo "deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen" >> /etc/apt/sources.list
    apt-get update
    apt-get install mongodb-10gen

# Add deploy user
    echo "Add deploy user: $DEPLOY_USER"
    echo "$DEPLOY_USER:$DEPLOY_USER:1000:1000::/home/$DEPLOY_USER:/bin/bash" | newusers
    cp -a /etc/skel/.[a-z]* /home/$DEPLOY_USER/
    chown -R $DEPLOY_USER /home/$DEPLOY_USER
    # Add to sudoers without password
    echo "$DEPLOY_USER ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers

# Finished
    echo "StackScript Finished!"
